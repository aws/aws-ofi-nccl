name: PR CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - v*
    paths:
      - "configure.ac"
      - "Makefile.am"
      - "autogen.sh"
      - "include/**"
      - "m4/**"
      - "src/**"
      - "tests/**"
      - "topology/**"
      - ".github/workflows/**"
  pull_request:
    paths:
      - "configure.ac"
      - "Makefile.am"
      - "autogen.sh"
      - "include/**"
      - "m4/**"
      - "src/**"
      - "tests/**"
      - "topology/**"
      - ".github/workflows/**"
env:
  # note, related to issue around actions/checkout@v4, linked below. This
  # environment variable is also now needed, as of july 2024.
  # ref: https://github.com/actions/runner/issues/2906#issuecomment-2208546951
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: 'true'

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  amazonlinux:
    strategy:
      matrix:
        sdk:
          - cuda
          - neuron
        efainstaller:
          - latest
          - 1.34.0
          - 1.25.0
        exclude:
          # Neuron requires platform-aws, which requires newer EFA installer
          - efainstaller: 1.25.0
            sdk: neuron
        include:
          - efainstaller: latest
            platform-aws: enable

          - efainstaller: 1.34.0
            platform-aws: enable

          # Platform-aws requires newer EFA installer, so disable it for builds
          # with legacy EFA installer
          - efainstaller: 1.25.0
            platform-aws: disable

    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/aws-ofi-nccl-al2023:${{ matrix.sdk }}-efa${{ matrix.efainstaller }}
    name: al2023/${{ matrix.sdk }}/efa@${{ matrix.efainstaller }}/build+test
    steps:
      - uses: actions/checkout@v3

      - name: Call `autoreconf -ivf`
        run: |
          ./autogen.sh

      - name: Run Configure
        run: |
          if [ "${{ matrix.sdk }}" = "neuron" ]; then
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --${{ matrix.platform-aws }}-platform-aws \
                        --enable-neuron
          else
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --${{ matrix.platform-aws }}-platform-aws \
                        --with-cuda=/usr/local/cuda/
          fi

      - name: Call `make`
        run: make V=1

      - name: Call `make check`
        run: make check V=1 || (cat tests/unit/test-suite.log && exit 1)

      - name: Call `make install`
        run: make install V=1

      - name: Call `make distcheck`
        run: make distcheck V=1

  distcheck:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc-variant:
          - latest
          - legacy
        cc:
          - gcc
          - clang
        tracing:
          - lttng
          - none
        sdk:
          - cuda
          - neuron
        include:
          - cc-variant: latest
            cc: clang
            cc-version: 18
          - cc-variant: latest
            cc: gcc
            cc-version: 13

    name: u2204/${{ matrix.sdk }}/${{matrix.cc}}-${{matrix.cc-variant}}/build+test
    container: ghcr.io/${{ github.repository }}/aws-ofi-nccl-ubuntu:${{ matrix.sdk }}-${{ matrix.cc }}-${{ matrix.cc-variant }}-${{ matrix.tracing }}-efalattest
    steps:
      - uses: actions/checkout@v4

      - name: Build Plugin
        run: |
          set -x
          export CC="cc"
          export CXX="c++"
          ./autogen.sh
          if [ "${{ matrix.sdk }}" = "neuron" ]
          then
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --enable-platform-aws \
                        --enable-neuron
          else
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --enable-platform-aws \
                        --with-cuda=/usr/local/cuda/
          fi

      - name: Call `make`
        run: make V=1

      - name: Call `make check`
        run: make check V=1 || (cat tests/unit/test-suite.log && exit 1)

      - name: Call `make install`
        run: sudo make install V=1

      - name: Call `make distcheck`
        run: make distcheck V=1

      - name: Upload config.log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.cc }}-${{ matrix.cc-variant }}-${{ matrix.sdk }}-config.log
          path: config.log
          if-no-files-found: ignore

  codechecker:
    runs-on: ubuntu-22.04
    needs: [distcheck]
    strategy:
      matrix:
        sdk:
          - cuda
          - neuron
    container: ghcr.io/${{ github.repository }}/aws-ofi-nccl-codechecker:${{ matrix.sdk }}-latest
    name: CodeChecker - ${{ matrix.sdk }}
    steps:
      - uses: actions/checkout@v4

      - name: Run Configure
        run: |
          ./autogen.sh
          if [ "${{ matrix.sdk }}" = "neuron" ]; then
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --enable-platform-aws \
                        --enable-neuron
          else
            ./configure --with-mpi=/opt/amazon/openmpi \
                        --with-libfabric=/opt/amazon/efa \
                        --enable-tests=yes \
                        --enable-werror=yes \
                        --enable-picky-compiler=yes \
                        --enable-platform-aws \
                        --with-cuda=/usr/local/cuda/
          fi

      - name: Run CodeChecker
        env:
          CC: clang
          CXX: clang++
        run: |
          # Ensure exit on real errors, but continue on exit code 2
          set +e
          
          # Create directories first
          mkdir -p /workspace/codechecker_Results
          mkdir -p /workspace/codechecker_Results_HTML
          mkdir -p ./codechecker_Results_HTML

          # Step 1: Log command
          CodeChecker log \
            -o /workspace/codechecker_Results.json \
            -b "make V=1"
          if [ $? -ne 0 ]; then exit 1; fi

          # Step 2: Analyze command
          CodeChecker analyze \
            /workspace/codechecker_Results.json \
            -o /workspace/codechecker_Results \
            --jobs "$(nproc)" \
            --config .github/codechecker.yaml \
            --ctu \
            --ctu-all
          if [ $? -ne 0 ]; then exit 1; fi

          # Step 3: Parse command - allow exit code 2
          CodeChecker parse \
            /workspace/codechecker_Results \
            --export html \
            --output /workspace/codechecker_Results_HTML
          parse_exit=$?
          if [ $parse_exit -ne 0 ] && [ $parse_exit -ne 2 ]; then
            exit 1
          fi

          # Copy results to a location accessible outside container
          cp -r /workspace/codechecker_Results_HTML/* ./codechecker_Results_HTML/
          exit 0

      - uses: actions/upload-artifact@v4
        with:
          name: CodeChecker Bug Reports for ${{ matrix.sdk }}
          path: |
            codechecker_Results_HTML/*.html
