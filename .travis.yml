language: c
sudo: true
dist: xenial

matrix:
  include:
    - env: PROVIDER=tcp
    - env: PROVIDER=sockets

env:
  global:
    - PATH=/usr/local/cuda/bin:${PATH}
    - LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}

addons:
 apt:
   packages:
     - libopenmpi-dev
     - gcc
     - automake
     - autoconf
     - libtool
     - flex

before_install:
 # Install CUDA
 - wget https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda-repo-ubuntu1604-10-0-local-10.0.130-410.48_1.0-1_amd64
 - sudo dpkg -i cuda-repo-ubuntu1604-10-0-local-10.0.130-410.48_1.0-1_amd64
 - sudo apt-key add /var/cuda-repo-10-0-local-10.0.130-410.48/7fa2af80.pub
 - sudo apt-get -y update
 - rm -f cuda-repo-ubuntu1604-10-0-local-10.0.130-410.48_1.0-1_amd64
 - sudo apt-get install -y cuda

install:
 # Install libfabric
 - git clone https://github.com/ofiwg/libfabric.git
 - pushd libfabric
 - git checkout v1.7.x
 - ./autogen.sh
 - ./configure --enable-debug; make -j8; sudo make install
 - popd

 # Install OMPI
 - git clone https://github.com/open-mpi/ompi.git
 - pushd ompi
 - git checkout v3.1.x
 - ./autogen.pl
 - ./configure --with-ofi --enable-debug
 - make -j8 > /dev/null 2>&1
 - sudo make install > /dev/null 2>&1
 - popd

 # Install NCCL
 - git clone https://github.com/NVIDIA/nccl.git
 - pushd nccl
 - make src.build NVCC_GENCODE="-gencode=arch=compute_70,code=sm_70 -gencode=arch=compute_60,code=sm_60"
 - popd

 # Configure dynamic linker
 - sudo ldconfig

 # Build aws-ofi-nccl plugin
 - mkdir install
 - ./autogen.sh
 - ./configure --with-nccl=${PWD}/nccl/build --with-cuda=/usr/local/cuda --prefix=${PWD}/install
 - make && make install

script:
 - mpirun -np 2 --oversubscribe -x FI_PROVIDER=${PROVIDER} --tag-output ./install/bin/nccl_connection
 - mpirun -np 2 --oversubscribe -x FI_PROVIDER=${PROVIDER} --tag-output ./install/bin/nccl_message_transfer
 - mpirun -np 2 --oversubscribe -x FI_PROVIDER=${PROVIDER} --tag-output ./install/bin/ring
